# --------------------------------------------
# Save current nginx conf for QA_LUOS
#/etc/nginx/sites-available/QA_LUOS
# --------------------------------------------


##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name qa.luos.io www.qa.luos.io;

    allow 10.9.0.0/20;
    #allow 127.0.0.1/20;
    #allow 81.220.191.211;
    allow 162.0.217.18;
    allow 81.220.191.160;
	allow 192.168.1.33;
    #deny all;

    # Add password protection
	auth_basic "Restricted Area";
	auth_basic_user_file /etc/apache2/.htpasswd;

    # Timeout values
	proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    fastcgi_read_timeout 300;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
        }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.4-fpm.sock;
    }

    location /public {
        auth_basic off;
    }

    # --------------------------------------
    # API DEFINITION ENDPOINTS
    # --------------------------------------
    # Reverse proxy for FASTAPI / STARLETTE
    # --------------------------------------
    location /public/nreg {
        auth_basic off;
        proxy_pass http://localhost:8002/nreg;
    }
    location /public/rtb {
        auth_basic off;
        proxy_pass http://localhost:8002/rtb;
    }
    location /public/platform {
        auth_basic off;
        proxy_pass http://localhost:8002/platform;
    }
    location /public/ping {
        auth_basic off;
        proxy_pass http://localhost:8002/ping;
    }
    location /public/test_status {
        auth_basic off;
        proxy_pass http://localhost:8002/test_status;
    }
    # ------------------------------------
    # FOR TEST AND DEBUG (to be removed)
    # ------------------------------------
    location /public/wip {
        auth_basic off;
        proxy_pass http://localhost:8002/wip;
    }
    location /public/path {
        auth_basic off;
        proxy_pass http://localhost:8002/path;
    }
    location /public/items/5 {
        auth_basic off;
        proxy_pass http://localhost:8002/items/5;
    }

   # --------------------------------------
   # END OF API DEFINITION
   # --------------------------------------

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/qa.luos.io/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/qa.luos.io/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = qa.luos.io) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80 default_server;
        listen [::]:80 default_server;

        server_name qa.luos.io www.qa.luos.io;
    return 404; # managed by Certbot
