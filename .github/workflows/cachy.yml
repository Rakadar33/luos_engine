name: Cachy
on:
  workflow_dispatch:
  # TODO JGA - A REMETTRE :
  # on:
  #   pull_request:
  #     types:
  #       - review_requested
  #   push:

concurrency:
  group: dev-build-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  cache-dependencies:
    name: create cache dependencies
    runs-on: ${{ matrix.os }}  
    strategy:
      matrix:
        #os: [macos-latest, windows-latest, ubuntu-latest]
        os: [ubuntu-latest]

    steps:
      - name: Check out Luos repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: ci-cache-dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-dep
        with:
          path: /dependencies_cache
          #key: ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('**/library.json') }}
          key: ${{ runner.os }}-cache-${{ env.cache-name }}-${{ hashFiles('./library.json') }}
          restore-keys: |
            ${{ runner.os }}-cache-${{ env.cache-name }}-

      - if: ${{ steps.ci-cache-dependencies.outputs.cache-hit == 'true' }}
        name: Cache Hit
        run: |
           echo 'Cache hit : dependencies are already installed'
           exit 0

      - if: ${{ steps.ci-cache-dependencies.outputs.cache-hit != 'true' }}
        name: debug
        run: |
           echo 'Cache Miss DEBUG !!!!!!!!!!!!!!!!!!!'
           pwd
           cat library.json


      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.5"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install platformio
          npm install -g clang-format@1.5.0
          echo '!!!!!!! DEBUG CACHE MISS !!!!!!!!!!!!!!!!!'

  unit-tests:
    #needs: cache-dependencies
    name: Unit tests
    runs-on: windows-latest
    steps:
      - name: Check out Luos repository
        uses: actions/checkout@v3

      - if: ${{ steps.ci-cache-dependencies.outputs.cache-hit != 'true' }}
        name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.5"

      - if: ${{ steps.ci-cache-dependencies.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install platformio

      - name: Run PlatformIO Unit Tests
        run: |
          # Clean all projects
          platformio run -t clean -c ./test/_resources/platformio.ini

          # Run Unit tests
          # TODO JGA - A REMETTRE :
          # platformio test -c ./test/_resources/platformio.ini  -vvv

  code-format:
    #needs: cache-dependencies
    name: Code format
    runs-on: ubuntu-latest
    steps:
      - name: Check out Luos repository
        uses: actions/checkout@v3

      - if: ${{ steps.ci-cache-dependencies.outputs.cache-hit != 'true' }}
        name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.5"

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - if: ${{ steps.ci-cache-dependencies.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: npm install -g clang-format@1.5.0

      - name: Check for code format
        run: python .github/workflows/run-clang-format.py -r .

  examples-build:
    #needs: cache-dependencies
    name: Examples build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO JGA - A REMETTRE :
        #project_folders: [examples/projects/l0,
        #                  examples/projects/Arduino,
        #                  examples/projects/NUCLEO-L432KC,
        #                  examples/projects/STM32F4-discovery,
        #                  examples/projects/NUCLEO-F401RE,
        #                  examples/projects/NUCLEO-F410RB,
        #                  examples/projects/NUCLEO-G431KB,
        #                  examples/projects/NUCLEO-G474RE,
        #                  examples/projects/NUCLEO-F072RB,
        #                  ]      
        project_folders: [examples/projects/NUCLEO-L073RZ]
        # TODO JGA - A REMETTRE :
        #os: [macos-latest, windows-latest, ubuntu-latest]
        os: [ubuntu-latest]

    steps:
      - name: Check out Luos repository
        uses: actions/checkout@v3

      - if: ${{ steps.ci-cache-dependencies.outputs.cache-hit != 'true' }}
        name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.5"

      - if: ${{ steps.ci-cache-dependencies.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install platformio

      - name: Run PlatformIO
        run: |
          for d in ${{ matrix.project_folders }}/*/
          do
            # Parse all folder
            if [ -f "$d/platformio.ini" ]
            then
              # This is a PIO project compile it
              echo "Compiling : $d"
              platformio run -d $d
            else
              # This folder could contain other projects, continue digging
              for dd in $d*/
              do
                # Parse all folder
                if [ -f "$dd/platformio.ini" ]
                then
                  # This is a PIO project compile it
                  echo "Compiling : $d"
                  platformio run -d $dd
                fi
              done
            fi
          done
            # ******** missing bootloader CI ********

  build-success:
    name: Build success
    needs: examples-build
    runs-on: ubuntu-latest
    steps:
    - run: echo "Build succeed!"
