name: Cachy
on:
  workflow_dispatch:

concurrency: 
  group: dev-build-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  unit-tests:
    name: Unit tests
    runs-on: windows-latest
    steps:
      - name: Check out Luos repository
        uses: actions/checkout@v3

      - name: Cache node modules
        id: ci-cache-python
        uses: actions/cache@v3
        env:
          cache-name: cache-py
        with:
          path: /ci_cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/library.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.ci-cache-python.outputs.cache-hit == 'true' }}
        name: Cache Hit
        run: echo 'CACHE HIT'

      - if: ${{ steps.ci-cache-python.outputs.cache-hit != 'true' }}
        name: Cache Miss
        continue-on-error: true
        run: echo 'CACHE MISS'
            
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.5"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install platformio

      - name: Dummy step
        run: |
          platformio run -t clean -d examples/projects/l0/led
          
  t1_cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v3
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: Run PlatformIO
        run: platformio run -t clean -d ./examples/projects/l0/led
  t2_cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v3
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: Run PlatformIO
        run: platformio run -t clean -d ./examples/projects/l0/button
