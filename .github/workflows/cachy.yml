name: Cachy Bouzouk
on:
  workflow_dispatch:

concurrency:
  group: dev-build-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  code-format:
    name: Check for code format
    runs-on: ubuntu-latest  
    steps:
      - name: Check out Luos repository
        uses: actions/checkout@v3

      - name: Cache dependancies
        id: format-dependancies-setup
        uses: actions/cache@v3
        env:
          cache-name: cache-format
        with:
          path: |
            ~/.cache/pip
            ${{ steps.npm-cache.outputs.dir }}
            ${{ env.pythonLocation }}/lib/python3.10/site-packages/*
          key: ${{ runner.os }}-format-${{ env.cache-name }}-${{ hashFiles('./library.json') }}
          restore-keys: ${{ runner.os }}-format-${{ env.cache-name }}-

      - if: ${{ steps.format-dependancies-setup.outputs.cache-hit != 'true' }}
        name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - if: ${{ steps.format-dependancies-setup.outputs.cache-hit != 'true' }}
        name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.5"

      - if: ${{ steps.format-dependancies-setup.outputs.cache-hit != 'true' }}
        name: Install dependancies
        run: |
          python -m pip install --upgrade pip
          npm install -g clang-format@1.5.0

      - name: Check for code format
        run: python .github/workflows/run-clang-format.py -r .

  examples-build:
    name: Examples build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Luos repository
        uses: actions/checkout@v3

      - name: Cache PlatformIO
        id: pio-setup
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-cache-pio-${{ hashFiles('./library.json') }}
 
      - name: Cache Python
        id: build-dependancies-setup
        uses: actions/cache@v3
        env:
          cache-name: cache-build
        with:
          path: |
            ~/.cache/pip
            ${{ env.pythonLocation }}/lib/python3.10/site-packages/*
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('./library.json') }}
          restore-keys: ${{ runner.os }}-format-${{ env.cache-name }}-

      - if: ${{ steps.build-dependancies-setup.outputs.cache-hit != 'true' }}
        name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.5"

      - if: ${{ steps.build-dependancies-setup.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install --upgrade platformio
          platformio platform install ststm32
          #TODO : ajouter les packages pour board + les dependances des py

      - name: aaaa
        run: | 
          whoami
          pwd
          ls -ll ~/
          ls -ll /home/runner/
          ls -ll /home/runner/.platformio
          
      - name: Run PlatformIO
        run: /home/platformio run -d examples/projects/NUCLEO-L073RZ/button

  build-success:
    name: Build success
    needs: examples-build
    runs-on: ubuntu-latest
    steps:
    - run: echo "Build succeed!"
